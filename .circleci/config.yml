version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
    working_directory: /ndidplatform/smart-contract
    steps:
      - checkout
      - run:
          name: Install tools and snappy
          command: |
            sudo apt-get update && sudo apt-get install -y --no-install-recommends \
                    g++ \
                    gcc \
                    make \
                    git \
                    libsnappy-dev \
                    libleveldb-dev
      # - run:
      #     name: Install LevelDB
      #     command: |
      #       wget -q https://github.com/google/leveldb/archive/v1.20.tar.gz && \
      #       tar -zxvf v1.20.tar.gz && \
      #       cd leveldb-1.20/ && \
      #       make
      #       sudo cp -r out-static/lib* out-shared/lib* /usr/local/lib/ && \
      #       sudo mkdir -p /usr/local/include/leveldb && \
      #       sudo cp -r include/leveldb /usr/local/include/ && \
      #       sudo ldconfig /usr/local/lib
      - run:
          name: Start Tendermint with ABCI
          command: |
            go run ./abci --home ./config/tendermint/IdP unsafe_reset_all
            CGO_ENABLED=1 CGO_LDFLAGS="-lsnappy" ABCI_DB_DIR_PATH=IdP_DB \
            go run \
            -ldflags "-X github.com/ndidplatform/smart-contract/v4/abci/version.GitCommit=`git rev-parse --short=8 HEAD`" \
            -tags "cleveldb" \
            ./abci --home ./config/tendermint/IdP node
          background: true

      - run: sleep 15
      - run:
          name: Test ABCI
          command: |
            cd test
            TENDERMINT_ADDRESS=http://localhost:45000 go test -v
  push_to_docker_hub:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            cd docker
            REPO_NAME=${REPO_NAME:-$DOCKER_USER}
            DOCKER_TAG=${DOCKER_TAG:-latest}
            ./build.sh
      - run:
          name: Push to docker hub
          command: |
            if [ ! "$DOCKER_USER"  -o  ! "$DOCKER_PASS"  ]
            then
              echo "Missing required environment variables"
              echo "- DOCKER_USER"
              echo "- DOCKER_PASS"
              exit 1
            fi
            REPO_NAME=${REPO_NAME:-$DOCKER_USER}
            DOCKER_TAG=${DOCKER_TAG:-latest}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $REPO_NAME/did-tendermint:$DOCKER_TAG
  push_dev_to_docker_hub:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            cd docker
            REPO_NAME=${REPO_NAME:-$DOCKER_USER}
            DOCKER_TAG=${DOCKER_TAG_DEV:-development}
            ./build.sh
      - run:
          name: Push to docker hub
          command: |
            if [ ! "$DOCKER_USER"  -o  ! "$DOCKER_PASS"  ]
            then
              echo "Missing required environment variables"
              echo "- DOCKER_USER"
              echo "- DOCKER_PASS"
              exit 1
            fi
            REPO_NAME=${REPO_NAME:-$DOCKER_USER}
            DOCKER_TAG=${DOCKER_TAG_DEV:-development}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $REPO_NAME/did-tendermint:$DOCKER_TAG
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - push_to_docker_hub:
          filters:
            branches:
              only: master
          requires:
            - build
      - push_dev_to_docker_hub:
          filters:
            branches:
              only: development
          requires:
            - build